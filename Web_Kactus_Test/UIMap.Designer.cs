// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas automatizadas de IU.
//      Versión: 15.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Web_Kactus_Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ArchivoPrueba: use 'ArchivoPruebaParams' para pasar parámetros a este método.
        /// </summary>
        public void ArchivoPrueba()
        {
            #region Variable Declarations
            WinPane uIKACTUSSmartPeopleGooPane = this.UIKACTUSSmartPeopleGooWindow.UIKACTUSSmartPeopleGooPane;
            WinList uIVistaElementosList = this.UIAbrirWindow.UIShellViewClient.UIVistaElementosList;
            WinButton uIAbrirButton = this.UIAbrirWindow.UIAbrirWindow1.UIAbrirButton;
            #endregion

            // Clic 'KACTUS Smart People - Google Chrome' panel
            Mouse.Click(uIKACTUSSmartPeopleGooPane, new Point(384, 681));

            // Seleccionar '' en cuadro de lista 'Vista Elementos'
            uIVistaElementosList.SelectedItemsAsString = this.ArchivoPruebaParams.UIVistaElementosListSelectedItemsAsString;

            // Clic '&Abrir' botón
            Mouse.Click(uIAbrirButton, new Point(23, 9));
        }
        
        /// <summary>
        /// ArchivosEdFormal: use 'ArchivosEdFormalParams' para pasar parámetros a este método.
        /// </summary>
        public void ArchivosEdFormal()
        {
            #region Variable Declarations
            WinComboBox uINombreComboBox = this.UIAbrirWindow.UIItemWindow.UINombreComboBox;
            WinButton uIAbrirButton = this.UIAbrirWindow.UIAbrirWindow1.UIAbrirButton;
            #endregion

            // Seleccionar 'Cert_'20190402'.pdf' en cuadro combinado 'Nombre:'
            uINombreComboBox.EditableItem = this.ArchivosEdFormalParams.UINombreComboBoxEditableItem;

            // Clic '&Abrir' botón
            Mouse.Click(uIAbrirButton, new Point(47, 12));
        }
        
        /// <summary>
        /// Basura: use 'BasuraExpectedValues' para pasar parámetros a este método.
        /// </summary>
        public void Basura()
        {
            #region Variable Declarations
            WinControl uIGuardarcomoDialog = this.UIGuardarcomoWindow.UIGuardarcomoDialog;
            #endregion

            // Compruebe que la propiedad 'ControlType' de 'Guardar como' Dialog es igual a 'Dialog'
            Assert.AreEqual(this.BasuraExpectedValues.UIGuardarcomoDialogControlType, uIGuardarcomoDialog.ControlType.ToString());
        }
        
        /// <summary>
        /// ClosePrint
        /// </summary>
        public void ClosePrint()
        {
            #region Variable Declarations
            WinPane uISelfServiceKACTUSHCMPane = this.UISelfServiceKACTUSHCMWindow.UISelfServiceKACTUSHCMPane;
            #endregion

            // No se grabó la última acción del mouse.

            // Clic 'Self Service - KACTUS HCM - Google Chrome' panel
            Mouse.Click(uISelfServiceKACTUSHCMPane, new Point(278, 191));
        }
        
        #region Properties
        public virtual ArchivoPruebaParams ArchivoPruebaParams
        {
            get
            {
                if ((this.mArchivoPruebaParams == null))
                {
                    this.mArchivoPruebaParams = new ArchivoPruebaParams();
                }
                return this.mArchivoPruebaParams;
            }
        }
        
        public virtual ArchivosEdFormalParams ArchivosEdFormalParams
        {
            get
            {
                if ((this.mArchivosEdFormalParams == null))
                {
                    this.mArchivosEdFormalParams = new ArchivosEdFormalParams();
                }
                return this.mArchivosEdFormalParams;
            }
        }
        
        public virtual BasuraExpectedValues BasuraExpectedValues
        {
            get
            {
                if ((this.mBasuraExpectedValues == null))
                {
                    this.mBasuraExpectedValues = new BasuraExpectedValues();
                }
                return this.mBasuraExpectedValues;
            }
        }
        
        public UISelfServiceKACTUSHCMWindow UISelfServiceKACTUSHCMWindow
        {
            get
            {
                if ((this.mUISelfServiceKACTUSHCMWindow == null))
                {
                    this.mUISelfServiceKACTUSHCMWindow = new UISelfServiceKACTUSHCMWindow();
                }
                return this.mUISelfServiceKACTUSHCMWindow;
            }
        }
        
        public UIGuardarcomoWindow UIGuardarcomoWindow
        {
            get
            {
                if ((this.mUIGuardarcomoWindow == null))
                {
                    this.mUIGuardarcomoWindow = new UIGuardarcomoWindow();
                }
                return this.mUIGuardarcomoWindow;
            }
        }
        
        public UIAbrirWindow UIAbrirWindow
        {
            get
            {
                if ((this.mUIAbrirWindow == null))
                {
                    this.mUIAbrirWindow = new UIAbrirWindow();
                }
                return this.mUIAbrirWindow;
            }
        }
        
        public UIKACTUSSmartPeopleGooWindow UIKACTUSSmartPeopleGooWindow
        {
            get
            {
                if ((this.mUIKACTUSSmartPeopleGooWindow == null))
                {
                    this.mUIKACTUSSmartPeopleGooWindow = new UIKACTUSSmartPeopleGooWindow();
                }
                return this.mUIKACTUSSmartPeopleGooWindow;
            }
        }
        #endregion
        
        #region Fields
        private ArchivoPruebaParams mArchivoPruebaParams;
        
        private ArchivosEdFormalParams mArchivosEdFormalParams;
        
        private BasuraExpectedValues mBasuraExpectedValues;
        
        private UISelfServiceKACTUSHCMWindow mUISelfServiceKACTUSHCMWindow;
        
        private UIGuardarcomoWindow mUIGuardarcomoWindow;
        
        private UIAbrirWindow mUIAbrirWindow;
        
        private UIKACTUSSmartPeopleGooWindow mUIKACTUSSmartPeopleGooWindow;
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ArchivoPrueba'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class ArchivoPruebaParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar '' en cuadro de lista 'Vista Elementos'
        /// </summary>
        public string UIVistaElementosListSelectedItemsAsString = "";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'ArchivosEdFormal'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class ArchivosEdFormalParams
    {
        
        #region Fields
        /// <summary>
        /// Seleccionar 'Cert_'20190402'.pdf' en cuadro combinado 'Nombre:'
        /// </summary>
        public string UINombreComboBoxEditableItem = "Cert_\'20190402\'.pdf";
        #endregion
    }
    
    /// <summary>
    /// Parámetros que se van a pasar a 'Basura'
    /// </summary>
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class BasuraExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Compruebe que la propiedad 'ControlType' de 'Guardar como' Dialog es igual a 'Dialog'
        /// </summary>
        public string UIGuardarcomoDialogControlType = "Dialog";
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UISelfServiceKACTUSHCMWindow : WinWindow
    {
        
        public UISelfServiceKACTUSHCMWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Self Service - KACTUS HCM - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Self Service - KACTUS HCM - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinPane UISelfServiceKACTUSHCMPane
        {
            get
            {
                if ((this.mUISelfServiceKACTUSHCMPane == null))
                {
                    this.mUISelfServiceKACTUSHCMPane = new WinPane(this);
                    #region Criterio de búsqueda
                    this.mUISelfServiceKACTUSHCMPane.SearchProperties[WinControl.PropertyNames.Name] = "Self Service - KACTUS HCM - Google Chrome";
                    this.mUISelfServiceKACTUSHCMPane.WindowTitles.Add("Self Service - KACTUS HCM - Google Chrome");
                    #endregion
                }
                return this.mUISelfServiceKACTUSHCMPane;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUISelfServiceKACTUSHCMPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIGuardarcomoWindow : WinWindow
    {
        
        public UIGuardarcomoWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Guardar como";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Guardar como");
            #endregion
        }
        
        #region Properties
        public WinControl UIGuardarcomoDialog
        {
            get
            {
                if ((this.mUIGuardarcomoDialog == null))
                {
                    this.mUIGuardarcomoDialog = new WinControl(this);
                    #region Criterio de búsqueda
                    this.mUIGuardarcomoDialog.SearchProperties[UITestControl.PropertyNames.Name] = "Guardar como";
                    this.mUIGuardarcomoDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUIGuardarcomoDialog.WindowTitles.Add("Guardar como");
                    #endregion
                }
                return this.mUIGuardarcomoDialog;
            }
        }
        
        public UIPaneldedetallesPane UIPaneldedetallesPane
        {
            get
            {
                if ((this.mUIPaneldedetallesPane == null))
                {
                    this.mUIPaneldedetallesPane = new UIPaneldedetallesPane(this);
                }
                return this.mUIPaneldedetallesPane;
            }
        }
        
        public UIGuardarWindow UIGuardarWindow
        {
            get
            {
                if ((this.mUIGuardarWindow == null))
                {
                    this.mUIGuardarWindow = new UIGuardarWindow(this);
                }
                return this.mUIGuardarWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIGuardarcomoDialog;
        
        private UIPaneldedetallesPane mUIPaneldedetallesPane;
        
        private UIGuardarWindow mUIGuardarWindow;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIPaneldedetallesPane : WinPane
    {
        
        public UIPaneldedetallesPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinControl.PropertyNames.Name] = "Panel de detalles";
            this.WindowTitles.Add("Guardar como");
            #endregion
        }
        
        #region Properties
        public WinComboBox UINombreComboBox
        {
            get
            {
                if ((this.mUINombreComboBox == null))
                {
                    this.mUINombreComboBox = new WinComboBox(this);
                    #region Criterio de búsqueda
                    this.mUINombreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Nombre:";
                    this.mUINombreComboBox.WindowTitles.Add("Guardar como");
                    #endregion
                }
                return this.mUINombreComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUINombreComboBox;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIGuardarWindow : WinWindow
    {
        
        public UIGuardarWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Guardar como");
            #endregion
        }
        
        #region Properties
        public WinButton UIGuardarButton
        {
            get
            {
                if ((this.mUIGuardarButton == null))
                {
                    this.mUIGuardarButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIGuardarButton.SearchProperties[WinButton.PropertyNames.Name] = "Guardar";
                    this.mUIGuardarButton.WindowTitles.Add("Guardar como");
                    #endregion
                }
                return this.mUIGuardarButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGuardarButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIAbrirWindow : WinWindow
    {
        
        public UIAbrirWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Abrir";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIAbrirWindow1 UIAbrirWindow1
        {
            get
            {
                if ((this.mUIAbrirWindow1 == null))
                {
                    this.mUIAbrirWindow1 = new UIAbrirWindow1(this);
                }
                return this.mUIAbrirWindow1;
            }
        }
        
        public UIShellViewClient UIShellViewClient
        {
            get
            {
                if ((this.mUIShellViewClient == null))
                {
                    this.mUIShellViewClient = new UIShellViewClient(this);
                }
                return this.mUIShellViewClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIAbrirWindow1 mUIAbrirWindow1;
        
        private UIShellViewClient mUIShellViewClient;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public WinComboBox UINombreComboBox
        {
            get
            {
                if ((this.mUINombreComboBox == null))
                {
                    this.mUINombreComboBox = new WinComboBox(this);
                    #region Criterio de búsqueda
                    this.mUINombreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Nombre:";
                    this.mUINombreComboBox.WindowTitles.Add("Abrir");
                    #endregion
                }
                return this.mUINombreComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUINombreComboBox;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIAbrirWindow1 : WinWindow
    {
        
        public UIAbrirWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public WinButton UIAbrirButton
        {
            get
            {
                if ((this.mUIAbrirButton == null))
                {
                    this.mUIAbrirButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIAbrirButton.SearchProperties[WinButton.PropertyNames.Name] = "Abrir";
                    this.mUIAbrirButton.WindowTitles.Add("Abrir");
                    #endregion
                }
                return this.mUIAbrirButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAbrirButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIShellViewClient : WinClient
    {
        
        public UIShellViewClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinControl.PropertyNames.Name] = "Vista de carpetas Shell";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public WinList UIVistaElementosList
        {
            get
            {
                if ((this.mUIVistaElementosList == null))
                {
                    this.mUIVistaElementosList = new WinList(this);
                    #region Criterio de búsqueda
                    this.mUIVistaElementosList.SearchProperties[WinList.PropertyNames.Name] = "Vista Elementos";
                    this.mUIVistaElementosList.WindowTitles.Add("Abrir");
                    #endregion
                }
                return this.mUIVistaElementosList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIVistaElementosList;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIKACTUSSmartPeopleGooWindow : WinWindow
    {
        
        public UIKACTUSSmartPeopleGooWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "KACTUS Smart People - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("KACTUS Smart People - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinPane UIKACTUSSmartPeopleGooPane
        {
            get
            {
                if ((this.mUIKACTUSSmartPeopleGooPane == null))
                {
                    this.mUIKACTUSSmartPeopleGooPane = new WinPane(this);
                    #region Criterio de búsqueda
                    this.mUIKACTUSSmartPeopleGooPane.SearchProperties[WinControl.PropertyNames.Name] = "KACTUS Smart People - Google Chrome";
                    this.mUIKACTUSSmartPeopleGooPane.WindowTitles.Add("KACTUS Smart People - Google Chrome");
                    #endregion
                }
                return this.mUIKACTUSSmartPeopleGooPane;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIKACTUSSmartPeopleGooPane;
        #endregion
    }
}
