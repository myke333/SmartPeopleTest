// ------------------------------------------------------------------------------
//  <auto-generated>
//      Este código lo generó el generador de pruebas automatizadas de IU.
//      Versión: 15.0.0.0
//
//      Los cambios realizados en este archivo pueden provocar un comportamiento incorrecto y se perderán si
//      se vuelve a generar el código.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Web_Kactus_Test.UIMap_Reclutamiento_JClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public partial class UIMap_Reclutamiento_J
    {
        
        #region Properties
        public UIWEB_Kactus_TestsRepoWindow UIWEB_Kactus_TestsRepoWindow
        {
            get
            {
                if ((this.mUIWEB_Kactus_TestsRepoWindow == null))
                {
                    this.mUIWEB_Kactus_TestsRepoWindow = new UIWEB_Kactus_TestsRepoWindow();
                }
                return this.mUIWEB_Kactus_TestsRepoWindow;
            }
        }
        
        public UIKactusRLReclutamientWindow UIKactusRLReclutamientWindow
        {
            get
            {
                if ((this.mUIKactusRLReclutamientWindow == null))
                {
                    this.mUIKactusRLReclutamientWindow = new UIKactusRLReclutamientWindow();
                }
                return this.mUIKactusRLReclutamientWindow;
            }
        }
        
        public UIAbrirWindow UIAbrirWindow
        {
            get
            {
                if ((this.mUIAbrirWindow == null))
                {
                    this.mUIAbrirWindow = new UIAbrirWindow();
                }
                return this.mUIAbrirWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIWEB_Kactus_TestsRepoWindow mUIWEB_Kactus_TestsRepoWindow;
        
        private UIKactusRLReclutamientWindow mUIKactusRLReclutamientWindow;
        
        private UIAbrirWindow mUIAbrirWindow;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIWEB_Kactus_TestsRepoWindow : WinWindow
    {
        
        public UIWEB_Kactus_TestsRepoWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "WEB_Kactus_Tests - Repos - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("WEB_Kactus_Tests - Repos - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinPane UIWEB_Kactus_TestsRepoPane
        {
            get
            {
                if ((this.mUIWEB_Kactus_TestsRepoPane == null))
                {
                    this.mUIWEB_Kactus_TestsRepoPane = new WinPane(this);
                    #region Criterio de búsqueda
                    this.mUIWEB_Kactus_TestsRepoPane.SearchProperties[WinControl.PropertyNames.Name] = "WEB_Kactus_Tests - Repos - Google Chrome";
                    this.mUIWEB_Kactus_TestsRepoPane.WindowTitles.Add("WEB_Kactus_Tests - Repos - Google Chrome");
                    #endregion
                }
                return this.mUIWEB_Kactus_TestsRepoPane;
            }
        }
        #endregion
        
        #region Fields
        private WinPane mUIWEB_Kactus_TestsRepoPane;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIKactusRLReclutamientWindow : WinWindow
    {
        
        public UIKactusRLReclutamientWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = ".:. Kactus RL Reclutamiento Web .:. - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add(".:. Kactus RL Reclutamiento Web .:. - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemPropertyPage UIItemPropertyPage
        {
            get
            {
                if ((this.mUIItemPropertyPage == null))
                {
                    this.mUIItemPropertyPage = new UIItemPropertyPage(this);
                }
                return this.mUIItemPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPropertyPage mUIItemPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemPropertyPage : WinControl
    {
        
        public UIItemPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add(".:. Kactus RL Reclutamiento Web .:. - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinButton UIKactusRLReclutamientButton
        {
            get
            {
                if ((this.mUIKactusRLReclutamientButton == null))
                {
                    this.mUIKactusRLReclutamientButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIKactusRLReclutamientButton.SearchProperties[WinButton.PropertyNames.Name] = "Seleccionar archivo";
                    this.mUIKactusRLReclutamientButton.WindowTitles.Add(".:. Kactus RL Reclutamiento Web .:. - Google Chrome");
                    #endregion
                }
                return this.mUIKactusRLReclutamientButton;
            }
        }
        
        public WinCustom UIKactusRLReclutamientCustom
        {
            get
            {
                if ((this.mUIKactusRLReclutamientCustom == null))
                {
                    this.mUIKactusRLReclutamientCustom = new WinCustom(this);
                    #region Criterio de búsqueda
                    this.mUIKactusRLReclutamientCustom.SearchProperties["Instance"] = "31";
                    this.mUIKactusRLReclutamientCustom.WindowTitles.Add(".:. Kactus RL Reclutamiento Web .:. - Google Chrome");
                    #endregion
                }
                return this.mUIKactusRLReclutamientCustom;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIKactusRLReclutamientButton;
        
        private WinCustom mUIKactusRLReclutamientCustom;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIAbrirWindow : WinWindow
    {
        
        public UIAbrirWindow()
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Abrir";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIAbrirWindow1 UIAbrirWindow1
        {
            get
            {
                if ((this.mUIAbrirWindow1 == null))
                {
                    this.mUIAbrirWindow1 = new UIAbrirWindow1(this);
                }
                return this.mUIAbrirWindow1;
            }
        }
        
        public UIAbrirSplitButton UIAbrirSplitButton
        {
            get
            {
                if ((this.mUIAbrirSplitButton == null))
                {
                    this.mUIAbrirSplitButton = new UIAbrirSplitButton(this);
                }
                return this.mUIAbrirSplitButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIAbrirWindow1 mUIAbrirWindow1;
        
        private UIAbrirSplitButton mUIAbrirSplitButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1148";
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public WinComboBox UINombreComboBox
        {
            get
            {
                if ((this.mUINombreComboBox == null))
                {
                    this.mUINombreComboBox = new WinComboBox(this);
                    #region Criterio de búsqueda
                    this.mUINombreComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Nombre:";
                    this.mUINombreComboBox.WindowTitles.Add("Abrir");
                    #endregion
                }
                return this.mUINombreComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUINombreComboBox;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIAbrirWindow1 : WinWindow
    {
        
        public UIAbrirWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public WinButton UIAbrirButton
        {
            get
            {
                if ((this.mUIAbrirButton == null))
                {
                    this.mUIAbrirButton = new WinButton(this);
                    #region Criterio de búsqueda
                    this.mUIAbrirButton.SearchProperties[WinButton.PropertyNames.Name] = "Abrir";
                    this.mUIAbrirButton.WindowTitles.Add("Abrir");
                    #endregion
                }
                return this.mUIAbrirButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAbrirButton;
        #endregion
    }
    
    [GeneratedCode("Generador de pruebas de UI codificadas", "15.0.26208.0")]
    public class UIAbrirSplitButton : WinSplitButton
    {
        
        public UIAbrirSplitButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Criterio de búsqueda
            this.SearchProperties[WinButton.PropertyNames.Name] = "Abrir";
            this.WindowTitles.Add("Abrir");
            #endregion
        }
        
        #region Properties
        public WinControl UIItemDropDownButton
        {
            get
            {
                if ((this.mUIItemDropDownButton == null))
                {
                    this.mUIItemDropDownButton = new WinControl(this);
                    #region Criterio de búsqueda
                    this.mUIItemDropDownButton.SearchProperties[UITestControl.PropertyNames.ControlType] = "DropDownButton";
                    this.mUIItemDropDownButton.WindowTitles.Add("Abrir");
                    #endregion
                }
                return this.mUIItemDropDownButton;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIItemDropDownButton;
        #endregion
    }
}
